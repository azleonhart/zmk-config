/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define	COLEMAK	0
#define	QWERTY	1
#define	LOWER	2
#define	RAISE	3

/ {
    keymap {
        compatible = "zmk,keymap";

        colemak_layer {
            // ---------------------------------------------------------------------------------
            // |  TAB  |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L  |  U  |  Y  |  ;  |   '   |
            // | TO(1) |  A  |  R  |  S  |  T  |  G  |   |  M  |  N  |  E  |  I  |  O  | ENTER |
            // | SHIFT |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H  |  ,  |  .  |  /  | SHIFT |
            //                     | LWR | GUI |BKSPC|   | SPC | ALT | RSE |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp F  &kp P     &kp B     &kp J      &kp L     &kp U      &kp Y    &kp SEMI  &kp SQT
&to 1      &kp A  &kp R  &kp S  &kp T     &kp G     &kp M      &kp N     &kp E      &kp I    &kp O     &kp RET
&kp LSHFT  &kp Z  &kp X  &kp C  &kp D     &kp V     &kp K      &kp H     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &mo 2  &kp LGUI  &kp BSPC  &kp SPACE  &kp RALT  &mo 3
            >;
        };

        qwerty_layer {
            // ---------------------------------------------------------------------------------
            // |       |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U  |  I  |  O  |  P  |       |
            // | TO(0) |  A  |  S  |  D  |  F  |  G  |   |  H  |  J  |  K  |  L  |  ;  |       |
            // |       |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M  |     |     |     |       |
            //                     |     |     |     |   |     |     |     |

            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R   &kp T     &kp Y   &kp U   &kp I   &kp O   &kp P     &trans
&to 0   &kp A  &kp S  &kp D   &kp F   &kp G     &kp H   &kp J   &kp K   &kp L   &kp SEMI  &trans
&trans  &kp Z  &kp X  &kp C   &kp V   &kp B     &kp N   &kp M   &trans  &trans  &trans    &trans
                      &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        lower_layer {
            // ---------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |   -   |
            // |       |     |     |     |     |     |   |     |     |     |     |     |       |
            // |       |     |     |     |     |     |   |     |     |     |     |     |       |
            //                     |     |     |     |   |     |CTRL |     |

            bindings = <
&kp ESC  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7     &kp N8  &kp N9  &kp N0  &kp MINUS
&trans   &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans  &trans  &trans  &trans
&trans   &trans  &trans  &trans  &trans  &trans    &trans  &trans     &trans  &trans  &trans  &trans
                         &trans  &trans  &trans    &trans  &kp RCTRL  &trans
            >;
        };

        raise_layer {
            // ---------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 | BT3 | BT4 | BT5 |   |     |     |  ^  |     |     |   +   |
            // |       |     |     |     |     |     |   |     |  <- |  v  | ->  |     |       |
            // |       |     |     |     |     |     |   |     |     |     |     |     |       |
            //                     |     |     |     |   | SPC |     |     |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans     &trans    &kp UP    &trans     &trans  &KP EQUAL
&trans      &trans        &trans        &trans        &trans        &trans          &trans     &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans     &trans    &trans    &trans     &trans  &trans
                                        &trans        &trans        &trans          &kp SPACE  &trans    &trans
            >;
        };
    };
};
